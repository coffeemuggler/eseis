% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/signal_whiten.R
\name{signal_whiten}
\alias{signal_whiten}
\title{Spectral whitening of a signal}
\usage{
signal_whiten(data, fft = FALSE)
}
\arguments{
\item{data}{\code{eseis} object, \code{numeric} vector or list of 
objects, data set to be processed.}

\item{fft}{\code{Logical} value, optin to run the function with an already 
Fast Fourier transformed data set. Default is \code{FALSE}, i.e., a normal 
time series is FFT processed, manipulated and back transformed.}
}
\value{
\code{Numeric} vector or list of vectors, Spectrally whitened data 
set.
}
\description{
Thsi function performs spectral whitening of a signal. If the input signal 
is not already a FFT vector (or Fast Fourier transformed \code{eseis} 
object), i.e., \code{fft = TRUE} it is transformed and multiplied with a 
Hanning window to avoid spectral leakage. The magnitude of the FFT signal 
is set to 1 throughout and the pahse is extracted. Both vectors are 
combined (magnitude times exponential values of imaginary phase). If 
\code{fft == FALSE} the result is transformed back to the time domain and 
returned.
}
\details{
The function is a simplified version of the Matlab function whitening (see: 
https://de.mathworks.com/matlabcentral/fileexchange/65345-spectral-whitening).
}
\examples{

## load and detrend example data set
data(rockfall)
data <- signal_detrend(rockfall_eseis)

## whiten data set
data_whitened <- signal_whiten(data = data)

## plot spectra of the two data sets
par(mfcol = c(2, 1))
plot_spectrum(signal_spectrum(data))
plot_spectrum(signal_spectrum(data_whitened))

}
\author{
Michael Dietze
}
\keyword{eseis}
