% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aux_nccpreprocess.R
\name{aux_nccpreprocess}
\alias{aux_nccpreprocess}
\title{Preprocess and correlate seismic signals for ambient noise cross correlation}
\usage{
aux_nccpreprocess(data, period, station, component, dir, window, overlap = 0,
  window_sub, overlap_sub = 0, lag = 120, dt, deconvolve, taper = 0.01, f,
  cut, sign, normalise, cpu, ...)
}
\arguments{
\item{data}{\code{list} object of length two, containing two \code{eseis} 
objects to be preprocessed. Alternatively, the arguments \code{period}, 
\code{station}, \code{component} and \code{dir} can be used to process an 
organised repository of seismic data files.}

\item{period}{\code{POSIXct} vector of length two, time period for which
the analysis shall be performed.}

\item{station}{\code{Character} vector, station ID, either one station or 
two stations are allowed. If one station is used, the components should be 
different ones. Station IDs must correspond to the ID in the file name of 
the data directory structure (cf. \code{aux_organisecubefiles}).}

\item{component}{\code{Character} vector of length two, seismic components, 
which must correspond to the component name in the file name of the data   
directory structure (cf. \code{aux_organisecubefiles}).}

\item{dir}{\code{Character} value, path to the seismic data directory. See
\code{aux_organisecubefiles} for details about the required file and  
directory structure.}

\item{window}{\code{Numeric} value, time window length in hours, used to 
calculate individual correlations. Default is \code{24} (one day).}

\item{overlap}{\code{Numeric} value, fraction of window overlap. Default 
is \code{0} (no overlap, but seamless succession). It is possible 
to specify negative values, which will result in spaced windows. A value of
for example \code{-1} will cause gaps as large as the analysis windows.}

\item{window_sub}{\code{Numeric} value, length of the sub-window in hours,
used to calculate correlations before stacking. Default is \code{1} (i.e.,
24 snippets to be stacked per day).}

\item{overlap_sub}{\code{Numeric} value, fraction of sub-window overlap. 
Default is \code{0} (no overlap, but seamless succession). It is possible 
to specify negative values, which will result in spaced windows. A value of
for example \code{-1} will cause gaps as large as the analysis windows.}

\item{lag}{\code{Numeric} value, cross correlation lag time of interest, 
in seconds. Default is \code{120} (2 minutes). This value determines the 
length of the output data set.}

\item{dt}{\code{Numeric} value, target sampling period of the output 
signal. Option can be used for aggregating (downsampling) the input signals
to save computation time and reach necessary consistency of sampling 
periods of signal pairs. If omitted, the signals are automatically 
aggregated to reach a common sampling period. See 
\code{aux_homogeniseperiod} for details.}

\item{deconvolve}{\code{logical} value, option to deconvolve signals. 
Default is \code{FALSE}. If set to \code{TRUE}, arguments \code{"sensor"},
\code{"logger"} and \code{"gain"} must be provided, each as vector of 
length two, representing the two signals, each.}

\item{taper}{\code{Numeric} value, fraction of the signals to be tapered 
to avoid edge effects. Default is \code{0.01} (1 percent).}

\item{f}{\code{Numeric} vector, filter frequencies. Either of length
one or two. If of length one, the filter type must be specified, 
additionally (\code{type = "HP"} or \code{type = "LP"}). Otherwise it is 
assumed that the filter is a bandpass one (\code{type = "BP"}). See
\code{signal_filter} for details. If not specified, no filtering is done.}

\item{cut}{\code{Numeric} value, option to cut the signal vectors above a 
provided threshold denoting n times to standard deviations of the signals. 
If omitted, no cutting is performed.}

\item{sign}{\code{Logical} value, option to convert the signals to signed 
one bit vectors. Default is \code{FALSE}. Will override any effect of the 
argument \code{cut}.}

\item{normalise}{\code{Logical} value, option to normalise correlation 
function by signal range. Default is \code{TRUE}.}

\item{cpu}{\code{Numeric} value, fraction of CPUs to use for parallel 
processing. If omitted, one CPU is used.}

\item{\dots}{Further arguments passed to the function.}
}
\value{
A \code{list} object containing the stacked correlation results and 
meta information. The element \code{correlation} contains a \code{matrix} 
with correlation data organised in rows. The element \code{meta} holds the 
respective meta information.
}
\description{
The function processes snippets of two seismic signals to perform ambient
noise cross correlation analysis as pre-step for estimating changes in the 
relative seismic velocity. It reads snippets of a given window length and 
fraction of overlap as well as sub windows and respective overlaps therein, 
preprocesses it (see details), calculates the cross correlation function 
within a given lag time window, stacks the sub window results and returns 
a matrics of correlation function steps for further analysis (see
\code{aux_nccprocess}).
}
\details{
The workflow is based on the Python modules miic and MSnoise with 
modifications due to the R environment constraints.

Signals can either come from one station or a pair of stations. In the 
former case the components must be different. In the latter case, and if 
the components are identical horizontal ones (e.g., BHE and BHE or BHN and 
BHN), it is useful to set the option \code{rotate = TRUE}. This will align 
the two components to avoid spurious phase offsets.
}
\examples{

## preprocess data and calculate window-wise cross-correlation functions
cc <- aux_nccpreprocess(period = as.POSIXct(x = c("2017-04-09 00:00:00",
                                                  "2017-04-09 03:00:00"),
                                            tz = "UTC"),
                        station = c("RUEG1", "RUEG2"),
                        component = c("BHZ", "BHZ"),
                        dir = paste0(system.file("extdata", 
                                                 package="eseis"), "/"),
                        window = 1.5 * 3600,
                        overlap = 0.5,
                        window_sub = 1800,
                        overlap_sub = 0,
                        lag = 20,
                        deconvolve = TRUE,
                        sensor = "TC120s",
                        logger = "Cube3ext",
                        gain = 1,
                        f = c(0.1, 0.5),
                        sign = TRUE)

## define colour scheme
cp <- colorRampPalette(colors = c("red", "grey", "blue"))

## plot image of cross-correlation functions
image(x = cc$time, 
      y = cc$lag, 
      z = cc$correlation, 
      col = cp(200))
                     
}
\author{
Michael Dietze
}
\keyword{eseis}
